@model IEnumerable<CertiNet1.Models.Agendamento>

@{
    ViewData["Title"] = "Agendamentos";
}

<h1>@ViewData["Title"]</h1>


<div class="d-flex justify-content-between align-items-center mb-4">

    <div>
        <p class="mb-0">
            <a asp-action="Create" class="btn btn-primary">Novo Agendamento</a>
        </p>
    </div>

    <div>
        <form asp-action="Index" method="get" class="form-inline">
            <div class="input-group">
                <input type="date" name="dataFiltro" value="@ViewData["CurrentDateFilter"]" class="form-control" />
                <div class="input-group-append">
                    <input type="submit" value="Filtrar" class="btn btn-secondary" />
                    <a asp-action="Index" class="btn btn-outline-secondary">Limpar</a>
                </div>
            </div>
        </form>
    </div>

</div>

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DataHora)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Modalidade)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cliente)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Usuario)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DataHora)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Modalidade)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cliente.CPF_CNPJ)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Usuario.Nome)
            </td>
            <td>
                  
                @{
                    var isConcluido = item.Status == StatusAgendamento.Concluido;

                    var buttonClass = isConcluido ? "btn btn-sm btn-secondary disabled" : "btn btn-sm btn-success";
                }

                <a asp-controller="CertificadoDigitals" asp-action="Create"
                    asp-route-agendamentoId="@item.Id"
                    asp-route-clienteId="@item.ClienteId"
                    class="@buttonClass"
                    aria-disabled="@isConcluido"
                    tabindex="@(isConcluido ? "-1" : null)">
                    Gerar Certificado
                </a>
                <a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                <a asp-action="Delete" asp-route-id="@item.Id"><img src="./images/lixo.png" alt="Apagar Item" /></a>
            </td>
                
        </tr>
}
    </tbody>
</table>
